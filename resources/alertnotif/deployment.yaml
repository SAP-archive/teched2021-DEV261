apiVersion: services.cloud.sap.com/v1
kind: ServiceInstance
metadata:
  name: alert-notif-ser-instance
spec:
  serviceOfferingName: alert-notification
  servicePlanName: standard
  parameters:
    configuration:
      actions:
      - name: email
        properties:
          destination: your.email@domain.com
        state: ENABLED
        type: EMAIL
      conditions:
      - name: system_down_condition
        predicate: EQUALS
        propertyKey: eventType
        propertyValue: system_down_condition
      subscriptions:
      - actions:
        - email
        conditions:
        - system_down_condition
        name: system_down_condition
        state: ENABLED
---
apiVersion: serverless.kyma-project.io/v1alpha1
kind: Function
metadata:
  name: alert-notif
spec:
  env:
  - name: oauth_url
    valueFrom:
      secretKeyRef:
        key: oauth_url
        name: alert-notif-ser-binding
  - name: client_id
    valueFrom:
      secretKeyRef:
        key: client_id
        name: alert-notif-ser-binding
  - name: client_secret
    valueFrom:
      secretKeyRef:
        key: client_secret
        name: alert-notif-ser-binding          
  - name: AN_REGION
    value: US21 #provide your subaccount region
  - name: CLUSTER_DOMAIN
    value: "TBA" #provide your cluster domain
  deps: "{ \n  \"name\": \"alert-notif-test\",\n  \"version\": \"1.0.0\",\n  \"dependencies\":
    {\n    \"@sap_oss/alert-notification-client\": \"1.1.0\"\n  }\n}"
  runtime: nodejs14
  source: "const { OAuthAuthentication, AlertNotificationClient,\n    RegionUtils,
    Severity, Category } = require(\"@sap_oss/alert-notification-client\");\n\nconst
    oAuthAuthentication = new OAuthAuthentication({\n    username: process.env.client_id,\n
    \   password: process.env.client_secret,\n    oAuthTokenUrl: process.env.oauth_url\n});\n\nmodule.exports
    = { \n  main: async function (event, context) {\n      try{\n        const client
    = new AlertNotificationClient({ \n            authentication: oAuthAuthentication,
    \n            region: RegionUtils[process.env.AN_REGION] \n        });\n        const result =  await
    processAlert(client, event.data);\n        return JSON.stringify(result);\n      }catch(error){\n
    \         console.log(error);\n          return error;\n      };\n  }\n}\n\n\nasync
    function processAlert(client, data){\n    const cur_time = Math.floor(+new Date()
    / 1000);\n    return await client.sendEvent({\n        body: 'The cap orders application can not access the external order system. \\nDETAILS:'
    + JSON.stringify(data).replace(/[{}]|,/g, \"\\n\"),\n        subject: 'System not accessible', \n        eventType: 'system_down_condition',\n        severity:
    Severity.FATAL,\n        category: Category.ALERT,\n        resource: {\n            resourceName:
    'cap-app',\n            resourceType: 'deployment',\n            resourceInstance:
    '1',\n            tags: {\n                detailsLink: 'https://grafana.' + process.env.CLUSTER_DOMAIN + '/explore?orgId=1&left=%5B%22now-1h%22,%22now%22,%22Loki%22,%7B%22expr%22:%22%7Bnamespace%3D%5C%22cap%5C%22%7D%22%7D,%7B%7D%5D'\n
    \           }\n        },\n        eventTimestamp: cur_time,\n        priority:
    1\n    });\n}\n\n "
---
apiVersion: services.cloud.sap.com/v1
kind: ServiceBinding
metadata:
  name: alert-notif-ser-binding
spec:
  serviceInstanceName: alert-notif-ser-instance
  